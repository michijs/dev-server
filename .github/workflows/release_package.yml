name: Release package
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type"
        required: true
        type: choice
        options:
          - major
          - minor
          - patch
          - premajor
          - preminor
          - prepatch
          - prerelease
      release-notes:
        description: "Release notes"
        type: string
env:
  RELEASE_TYPE: ${{ github.event.inputs.release-type }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

        # Setup Node.js environment
      - name: Set up Node.js 16.17.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          # Important!
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      # Build
      - name: Build
        run: npm run dist

      # Configure Git
      - name: Git configuration
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV

      # Commit changes
      - name: Commit package.json changes and create tag
        run: |
          git add "package.json"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      # Publish version to public repository
      - name: Publish
        run: npm publish --access public --tag ${{ env.RELEASE_TAG }}
        
      # Push repository changes
      - name: Push changes to repository
        run: |
          git push origin && git push --tags

      # Update GitHub release with changelog
      - name: Update GitHub release documentation
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          body: ${{ github.event.inputs.release-notes }}
          prerelease: ${{ startsWith(github.event.inputs.release-type, 'pre') }}
